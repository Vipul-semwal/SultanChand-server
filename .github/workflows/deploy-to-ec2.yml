name: Deploy Medusa Server to EC2

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 🚀 Checkout code
      uses: actions/checkout@v4

    - name: ⚙️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x

    - name: 📦 Install dependencies
      run: npm install

    - name: 🔑 Save SSH Key to File & Validate
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" | tr -d '\r' > "$GITHUB_WORKSPACE/private_key.pem"
        chmod 600 "$GITHUB_WORKSPACE/private_key.pem"

        # Validate the key file
        if [[ ! -s "$GITHUB_WORKSPACE/private_key.pem" ]]; then
          echo "❌ ERROR: private_key.pem file is empty or missing!" >&2
          exit 1
        fi

    - name: 🔍 Debug SSH Key & Check File Permissions
      run: |
        ls -l "$GITHUB_WORKSPACE/private_key.pem"
        head -5 "$GITHUB_WORKSPACE/private_key.pem"

    - name: ✅ Test SSH Connection
      run: |
        ssh -o StrictHostKeyChecking=no -i "$GITHUB_WORKSPACE/private_key.pem" ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo '✅ SSH Connection Successful'"

    - name: 🏗️ Ensure Target Directory Exists
      run: |
        ssh -o StrictHostKeyChecking=no -i "$GITHUB_WORKSPACE/private_key.pem" ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
        mkdir -p /home/ubuntu/medusa-server && chmod 755 /home/ubuntu/medusa-server"

    - name: 📂 Deploy Medusa Server Code via Rsync
      run: |
        rsync -avz --delete --progress -e "ssh -o StrictHostKeyChecking=no -i $GITHUB_WORKSPACE/private_key.pem" ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/medusa-server

    - name: 🚀 Start Medusa Server on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i "$GITHUB_WORKSPACE/private_key.pem" ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
          cd /home/ubuntu/medusa-server &&
          echo '${{ secrets.ENV_PROD }}' > .env &&
          command -v pm2 >/dev/null 2>&1 || npm install -g pm2 &&
          npm install --production &&
          pm2 stop medusa-server || true &&
          pm2 start npm --name 'medusa-server' -- run start &&
          pm2 save &&
          echo '✅ Deployment Complete!'"
